# Generated by Django 5.2.6 on 2025-09-17 21:59

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('energy_value', models.PositiveIntegerField(help_text='Энергетическая ценность на 100 г, ккал')),
            ],
            options={
                'verbose_name': 'ингредиент',
                'verbose_name_plural': 'ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('measurement_unit', models.CharField(max_length=16, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'нутриент',
                'verbose_name_plural': 'нутриенты',
            },
        ),
        migrations.CreateModel(
            name='IngredientInProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='Укажите количество этого ингредиента в гр.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_links', to='products.ingredient', verbose_name='Ингредиент')),
            ],
            options={
                'verbose_name': 'ингредиент в продукте',
                'verbose_name_plural': 'ингредиенты в продуктах',
            },
        ),
        migrations.CreateModel(
            name='NutrientInIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_per_100g', models.PositiveIntegerField(help_text='Количество нутриента на 100 г ингредиента', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrient_links', to='products.ingredient', verbose_name='Ингредиент')),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrient_ingredients', to='products.nutrient', verbose_name='Нутриент')),
            ],
            options={
                'verbose_name': 'нутриент в ингредиенте',
                'verbose_name_plural': 'нутриенты в ингредиентах',
            },
        ),
        migrations.AddField(
            model_name='ingredient',
            name='nutrients',
            field=models.ManyToManyField(help_text='Выберите нутриенты и укажите их количество', through='products.NutrientInIngredient', to='products.nutrient', verbose_name='Ингредиенты'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='images', verbose_name='Фото')),
                ('energy_value', models.PositiveIntegerField(help_text='Энергетическая ценность продукта, ккал')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='Цена', max_digits=10)),
                ('ingredients', models.ManyToManyField(help_text='Выберите ингредиенты и укажите их количество', through='products.IngredientInProduct', to='products.ingredient', verbose_name='Ингредиенты')),
            ],
            options={
                'verbose_name': 'продукт',
                'verbose_name_plural': 'продукты',
            },
        ),
        migrations.AddField(
            model_name='ingredientinproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_ingredients', to='products.product', verbose_name='Продукт'),
        ),
        migrations.AddConstraint(
            model_name='nutrientiningredient',
            constraint=models.UniqueConstraint(fields=('nutrient', 'ingredient'), name='unique_ingredient_in_nutrient'),
        ),
        migrations.AddConstraint(
            model_name='ingredientinproduct',
            constraint=models.UniqueConstraint(fields=('product', 'ingredient'), name='unique_ingredient_in_product'),
        ),
    ]
